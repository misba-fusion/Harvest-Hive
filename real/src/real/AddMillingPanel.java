package real;

import java.sql.Date;
import java.sql.DriverManager;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

public class AddMillingPanel extends javax.swing.JPanel {

    DAO dao;
    
    public AddMillingPanel() {
        dao = new DAO();
        initComponents();
        GetPaddy();
        DisplayMilling();
        
        JPanel panel = this;
        
        /*addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                String paddyId = paddyIdField.getSelectedItem().toString();
                String dateOfMilling = dateOfMillingField.getText().toString();
                String millingOperator = millingOperatorField.getText().toString();
                String millingMachine = millingMachineField.getText().toString();
                String duration = durationField.getText().toString();
                String brokenRiceParcentage = brokenRiceField.getText().toString();
                String bran = branField.getText().toString();
                String quality = qualityCombo.getSelectedItem().toString();
                
                if(paddyId.isEmpty() || dateOfMilling.isEmpty() || millingOperator.isEmpty() || millingMachine.isEmpty() || duration.isEmpty() || brokenRiceParcentage.isEmpty() || bran.isEmpty()){
                    JOptionPane.showMessageDialog((JFrame) SwingUtilities.getWindowAncestor(panel),
                    "Required field is empty",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
                    return;
                }
                if(dao.addMilling(Integer.parseInt(paddyId),Date.valueOf(dateOfMilling),millingOperator,millingMachine,Integer.parseInt(duration),Double.parseDouble(brokenRiceParcentage),Double.parseDouble(bran),quality)){
                    JOptionPane.showMessageDialog((JFrame) SwingUtilities.getWindowAncestor(panel),
                    "Succesfully added Milling",
                    "Success",
                    JOptionPane.INFORMATION_MESSAGE);
                }
                else{
                    JOptionPane.showMessageDialog((JFrame) SwingUtilities.getWindowAncestor(panel),
                    "Unknow error",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
                }
                
                
                
            }
        });*/
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        durationField = new javax.swing.JTextField();
        dateOfMillingField = new javax.swing.JTextField();
        millingOperatorField = new javax.swing.JTextField();
        millingMachineField = new javax.swing.JTextField();
        branField = new javax.swing.JTextField();
        brokenRiceField = new javax.swing.JTextField();
        qualityCombo = new javax.swing.JComboBox<>();
        clearButton = new javax.swing.JButton();
        paddyIdField = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        millingTable = new javax.swing.JTable();
        updateButton = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(960, 540));
        setPreferredSize(new java.awt.Dimension(960, 540));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Add Milling");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("PaddyID");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Date of Milling");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Milling Operator");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Milling Machine");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Broken Rice Percentage");

        addButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Duration");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("Bran Percentage");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Quality Parameters");

        durationField.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        durationField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                durationFieldActionPerformed(evt);
            }
        });

        dateOfMillingField.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        dateOfMillingField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateOfMillingFieldActionPerformed(evt);
            }
        });

        millingOperatorField.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        millingOperatorField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                millingOperatorFieldActionPerformed(evt);
            }
        });

        millingMachineField.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        millingMachineField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                millingMachineFieldActionPerformed(evt);
            }
        });

        branField.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        branField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                branFieldActionPerformed(evt);
            }
        });

        brokenRiceField.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        brokenRiceField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brokenRiceFieldActionPerformed(evt);
            }
        });

        qualityCombo.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        qualityCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Very Good", "Good", "Bad", "Very Bad" }));

        clearButton.setBackground(new java.awt.Color(255, 102, 102));
        clearButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        paddyIdField.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N

        millingTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        millingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MillingID", "PaddyID", "Date of Milling", "Milling Operator", "Milling Machine", "Milling Duration", "Broken Rice Percentage", "Bran Percentage", "Rice Quality_Parameters"
            }
        ));
        millingTable.setToolTipText("");
        millingTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        millingTable.setSelectionBackground(new java.awt.Color(255, 102, 102));
        millingTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                millingTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(millingTable);

        updateButton.setBackground(new java.awt.Color(153, 255, 153));
        updateButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(millingMachineField, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                            .addComponent(millingOperatorField, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                            .addComponent(durationField)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dateOfMillingField, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                            .addComponent(paddyIdField, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(qualityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(branField, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(brokenRiceField, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 55, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(405, 405, 405))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 922, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(paddyIdField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(brokenRiceField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateOfMillingField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8)
                    .addComponent(branField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(millingOperatorField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(millingMachineField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(durationField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(qualityCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void Clear()
    {
        paddyIdField.setSelectedItem("");
        dateOfMillingField.setText("");
        millingOperatorField.setText("");
        millingMachineField.setText("");
        durationField.setText("");
        brokenRiceField.setText("");
        branField.setText("");
    }
    
    Connection Con = null;
    PreparedStatement pst = null;
    ResultSet Rs = null, Rs1 = null;
    Statement St = null, St1 = null;
    private void GetPaddy()
    {
        try{
             Con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=ProjectDB;selectMethod=cursor", "sa", "123456");
             St=Con.createStatement();
             String Query = "select * from Paddy";
             Rs=St.executeQuery(Query);
             while(Rs.next())
             {
                 String paddyId=String.valueOf(Rs.getInt("PaddyID"));
                 paddyIdField.addItem(paddyId);
             }
        }catch(Exception e){
            
        }
    }
    
    Connection Con1 = null;
    PreparedStatement pst1 = null;
    ResultSet Rs2 = null, Rs3 = null;
    Statement St2 = null, St3 = null;
    private void DisplayMilling()
    {
        try{
            Con1 = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=ProjectDB;selectMethod=cursor", "sa", "123456");
            St2 = Con1.createStatement();
            Rs2 = St2.executeQuery("select * from Milling");
            millingTable.setModel(DbUtils.resultSetToTableModel(Rs2));
        }catch(Exception e){
            
        }
    }
      
    
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        if(dateOfMillingField.getText().isEmpty() || millingOperatorField.getText().isEmpty() || millingMachineField.getText().isEmpty() || durationField.getText().isEmpty() || brokenRiceField.getText().isEmpty() || branField.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Missing Information");
        } 
        else 
        {
              try{
                        
                   Con1 = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=ProjectDB;selectMethod=cursor", "sa", "123456");
                   PreparedStatement Add = Con1.prepareStatement("INSERT INTO Milling(PaddyID, Date_of_Milling, Milling_Operator, Milling_Machine, Milling_Duration, Broken_Rice_Percentage, Bran_Percentage, Rice_Quality_Parameters) VALUES(?,?,?,?,?,?,?,?)");
                   Add.setString(1, paddyIdField.getSelectedItem().toString());
                   Add.setDate(2, Date.valueOf(dateOfMillingField.getText()));
                   Add.setString(3, millingOperatorField.getText().toString());
                   Add.setString(4, millingMachineField.getText().toString());
                   Add.setString(5, durationField.getText().toString());
                   Add.setDouble(6, Double.valueOf(brokenRiceField.getText()));
                   Add.setDouble(7, Double.valueOf(branField.getText()));
                   Add.setString(8, qualityCombo.getSelectedItem().toString());
                   
                   
                   int row = Add.executeUpdate();
                   JOptionPane.showMessageDialog(this, "Milling Added");
                   Con.close();
                   DisplayMilling();
                   
              }catch(Exception e){
                   JOptionPane.showMessageDialog(this, e);
              }
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void durationFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_durationFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_durationFieldActionPerformed

    private void dateOfMillingFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateOfMillingFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateOfMillingFieldActionPerformed

    private void millingOperatorFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_millingOperatorFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_millingOperatorFieldActionPerformed

    private void millingMachineFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_millingMachineFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_millingMachineFieldActionPerformed

    private void branFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_branFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_branFieldActionPerformed

    private void brokenRiceFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brokenRiceFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_brokenRiceFieldActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        Clear();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
         if(Key=="")
        {
            JOptionPane.showMessageDialog(this, "Select a Milling");
        } 
        else 
        {
              try{           
                   Con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=ProjectDB;selectMethod=cursor", "sa", "123456");
                   String Query = "Update Milling set PaddyID=?,Date_of_Milling=?,Milling_Operator=?,Milling_Machine=?,Milling_Duration=?,Broken_Rice_Percentage=?,Bran_Percentage=?,Rice_Quality_Parameters=? where MillingID=?";
                   
                   PreparedStatement Add = Con1.prepareStatement(Query);
                   Add.setString(9,Key);
                   
                   Add.setString(1, paddyIdField.getSelectedItem().toString());
                   Add.setString(2, dateOfMillingField.getText().toString());
                   Add.setString(3, millingOperatorField.getText().toString());
                   Add.setString(4, millingMachineField.getText().toString());
                   Add.setString(5, durationField.getText().toString());
                   Add.setString(6, brokenRiceField.getText().toString());
                   Add.setString(7, branField.getText().toString());
                   Add.setString(8, qualityCombo.getSelectedItem().toString());
                   
                   
                   int row = Add.executeUpdate();
                   JOptionPane.showMessageDialog(this, "Miling Updated");
                   Con1.close();
                   DisplayMilling();
                   Clear();
                   
              }catch(Exception e){
                   JOptionPane.showMessageDialog(this, e);
              }
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    String  Key= "";
    private void millingTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_millingTableMouseClicked
        DefaultTableModel model = (DefaultTableModel)millingTable.getModel();
        int MyIndex = millingTable.getSelectedRow();
        Key =model.getValueAt(MyIndex, 0).toString();
        
        paddyIdField.setSelectedItem(model.getValueAt(MyIndex,1).toString());
        dateOfMillingField.setText(model.getValueAt(MyIndex,2).toString());
        millingOperatorField.setText(model.getValueAt(MyIndex,3).toString()); 
        millingMachineField.setText(model.getValueAt(MyIndex,4).toString());
        durationField.setText(model.getValueAt(MyIndex,5).toString());
        brokenRiceField.setText(model.getValueAt(MyIndex,6).toString());
        branField.setText(model.getValueAt(MyIndex,7).toString());
        qualityCombo.setSelectedItem(model.getValueAt(MyIndex,8).toString());
    }//GEN-LAST:event_millingTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextField branField;
    private javax.swing.JTextField brokenRiceField;
    private javax.swing.JButton clearButton;
    private javax.swing.JTextField dateOfMillingField;
    private javax.swing.JTextField durationField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField millingMachineField;
    private javax.swing.JTextField millingOperatorField;
    private javax.swing.JTable millingTable;
    private javax.swing.JComboBox<String> paddyIdField;
    private javax.swing.JComboBox<String> qualityCombo;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
